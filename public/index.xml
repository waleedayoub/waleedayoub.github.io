<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Waleed Ayoub</title>
    <link>https://waleedayoub.com/</link>
    <description>Recent posts from on Waleed Ayoub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Sep 2023 22:40:29 -0400</lastBuildDate><atom:link href="https://waleedayoub.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git set up for datatalksclub zoomcamp</title>
      <link>https://waleedayoub.com/post/git-setup-datatalksclub/</link>
      <pubDate>Tue, 05 Sep 2023 22:40:29 -0400</pubDate>
      
      <guid>https://waleedayoub.com/post/git-setup-datatalksclub/</guid>
      <description>&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Original course repo as read-only that gets updated throughout the duration of the course&lt;/li&gt;
&lt;li&gt;My own repo in my github account that is used to get updates from original course repo and for me to write my own assignments / work&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;What I&amp;rsquo;m looking to do is essentially maintain a fork of the original course repository, while also adding your own work to it. Here&amp;rsquo;s a step-by-step guide to help you set this up:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Fork the Original Repository&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to the GitHub page of the course repository.&lt;/li&gt;
&lt;li&gt;Click the &amp;ldquo;Fork&amp;rdquo; button on the top right. This will create a copy of the repository under your GitHub account.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Clone Your Forked Repository&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On your forked repository&amp;rsquo;s GitHub page, click the &amp;ldquo;Code&amp;rdquo; button and copy the URL.&lt;/li&gt;
&lt;li&gt;In your terminal or command prompt, navigate to where you want to store the project and run:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone [URL]
&lt;/code&gt;&lt;/pre&gt;Replace &lt;code&gt;[URL]&lt;/code&gt; with the URL you copied.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Set Up a Remote to Track the Original Repository&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to your cloned directory:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd [repository-name]
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Add the original repository as a remote named &lt;code&gt;upstream&lt;/code&gt;:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git remote add class [original-repo-URL]
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Syncing Your Fork&lt;/strong&gt;:
Whenever you want to pull updates from the original course repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fetch the changes:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git fetch class
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Make sure you&amp;rsquo;re on your main branch (or whichever branch you want to update):
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git checkout main
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Merge the changes from the &lt;code&gt;upstream&lt;/code&gt;&amp;rsquo;s main branch:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git merge class/main
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Adding Your Own Work&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a new branch for your work to keep things organized:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git checkout -b my-feature-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Make your changes, add them, and commit:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git add .
git commit -m &amp;#34;Description of my changes&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Push your changes to your forked repository:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git push origin my-feature-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Merging Your Work into Your Main Branch&lt;/strong&gt;:
If you&amp;rsquo;re satisfied with your work and want to merge it into your main branch:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Switch to your main branch:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git checkout main
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Merge your feature branch:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git merge my-feature-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Push the merged changes to your forked repository:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git push origin main
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Keeping Your Work Updated&lt;/strong&gt;:
Periodically, you&amp;rsquo;ll want to pull updates from the original course repository (as described in step 4) to ensure you have the latest content. Just be cautious when merging if you&amp;rsquo;ve made extensive changes to your fork, as there may be merge conflicts. Resolve any conflicts as needed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Remember, the key is to treat the &lt;code&gt;upstream&lt;/code&gt; as read-only. You&amp;rsquo;ll never push changes to it. All your work will be done in your forked repository (&lt;code&gt;origin&lt;/code&gt;). This setup allows you to both keep up with updates from the course and maintain your own changes.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
